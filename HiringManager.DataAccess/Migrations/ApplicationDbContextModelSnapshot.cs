// <auto-generated />
using System;
using HiringManager.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiringManager.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HiringManager.Models.ApplicationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<bool>("Submitted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique()
                        .HasFilter("[ApplicationId] IS NOT NULL");

                    b.ToTable("ApplicationDetails");
                });

            modelBuilder.Entity("HiringManager.Models.EducationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CollegeUniversity")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HighestQualification")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PassoutYear")
                        .HasColumnType("int");

                    b.Property<decimal>("PointerPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Stream")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDetailId");

                    b.ToTable("EducationDetails");
                });

            modelBuilder.Entity("HiringManager.Models.ExperienceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentCompany")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PreviousCompanies")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("TotalExperience")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDetailId");

                    b.ToTable("ExperienceDetails");
                });

            modelBuilder.Entity("HiringManager.Models.PersonalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationDetailId1")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDetailId")
                        .IsUnique();

                    b.HasIndex("ApplicationDetailId1");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("HiringManager.Models.EducationDetail", b =>
                {
                    b.HasOne("HiringManager.Models.ApplicationDetail", "ApplicationDetail")
                        .WithMany("EducationDetails")
                        .HasForeignKey("ApplicationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationDetail");
                });

            modelBuilder.Entity("HiringManager.Models.ExperienceDetail", b =>
                {
                    b.HasOne("HiringManager.Models.ApplicationDetail", "ApplicationDetail")
                        .WithMany("ExperienceDetails")
                        .HasForeignKey("ApplicationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationDetail");
                });

            modelBuilder.Entity("HiringManager.Models.PersonalDetail", b =>
                {
                    b.HasOne("HiringManager.Models.ApplicationDetail", null)
                        .WithOne("PersonalDetail")
                        .HasForeignKey("HiringManager.Models.PersonalDetail", "ApplicationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiringManager.Models.ApplicationDetail", "ApplicationDetail")
                        .WithMany()
                        .HasForeignKey("ApplicationDetailId1");

                    b.Navigation("ApplicationDetail");
                });

            modelBuilder.Entity("HiringManager.Models.ApplicationDetail", b =>
                {
                    b.Navigation("EducationDetails");

                    b.Navigation("ExperienceDetails");

                    b.Navigation("PersonalDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
